# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.api_options_one_api_endpoints import ApiOptionsOneApiEndpoints  # noqa: F401,E501
from swagger_server import util


class ApiOptionsOne(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, api_endpoints: List[ApiOptionsOneApiEndpoints]=None, description: str=None, key_value_pairs: Dict[str, str]=None, name: str=None):  # noqa: E501
        """ApiOptionsOne - a model defined in Swagger

        :param api_endpoints: The api_endpoints of this ApiOptionsOne.  # noqa: E501
        :type api_endpoints: List[ApiOptionsOneApiEndpoints]
        :param description: The description of this ApiOptionsOne.  # noqa: E501
        :type description: str
        :param key_value_pairs: The key_value_pairs of this ApiOptionsOne.  # noqa: E501
        :type key_value_pairs: Dict[str, str]
        :param name: The name of this ApiOptionsOne.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'api_endpoints': List[ApiOptionsOneApiEndpoints],
            'description': str,
            'key_value_pairs': Dict[str, str],
            'name': str
        }

        self.attribute_map = {
            'api_endpoints': 'api_endpoints',
            'description': 'description',
            'key_value_pairs': 'key_value_pairs',
            'name': 'name'
        }
        self._api_endpoints = api_endpoints
        self._description = description
        self._key_value_pairs = key_value_pairs
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'ApiOptionsOne':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The api_options_one of this ApiOptionsOne.  # noqa: E501
        :rtype: ApiOptionsOne
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_endpoints(self) -> List[ApiOptionsOneApiEndpoints]:
        """Gets the api_endpoints of this ApiOptionsOne.


        :return: The api_endpoints of this ApiOptionsOne.
        :rtype: List[ApiOptionsOneApiEndpoints]
        """
        return self._api_endpoints

    @api_endpoints.setter
    def api_endpoints(self, api_endpoints: List[ApiOptionsOneApiEndpoints]):
        """Sets the api_endpoints of this ApiOptionsOne.


        :param api_endpoints: The api_endpoints of this ApiOptionsOne.
        :type api_endpoints: List[ApiOptionsOneApiEndpoints]
        """

        self._api_endpoints = api_endpoints

    @property
    def description(self) -> str:
        """Gets the description of this ApiOptionsOne.


        :return: The description of this ApiOptionsOne.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this ApiOptionsOne.


        :param description: The description of this ApiOptionsOne.
        :type description: str
        """

        self._description = description

    @property
    def key_value_pairs(self) -> Dict[str, str]:
        """Gets the key_value_pairs of this ApiOptionsOne.


        :return: The key_value_pairs of this ApiOptionsOne.
        :rtype: Dict[str, str]
        """
        return self._key_value_pairs

    @key_value_pairs.setter
    def key_value_pairs(self, key_value_pairs: Dict[str, str]):
        """Sets the key_value_pairs of this ApiOptionsOne.


        :param key_value_pairs: The key_value_pairs of this ApiOptionsOne.
        :type key_value_pairs: Dict[str, str]
        """

        self._key_value_pairs = key_value_pairs

    @property
    def name(self) -> str:
        """Gets the name of this ApiOptionsOne.


        :return: The name of this ApiOptionsOne.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ApiOptionsOne.


        :param name: The name of this ApiOptionsOne.
        :type name: str
        """

        self._name = name
