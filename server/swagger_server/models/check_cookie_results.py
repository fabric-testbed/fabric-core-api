# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CheckCookieResults(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cookie_name: str=None, cookie_attributes: object=None, fabric_attributes: object=None):  # noqa: E501
        """CheckCookieResults - a model defined in Swagger

        :param cookie_name: The cookie_name of this CheckCookieResults.  # noqa: E501
        :type cookie_name: str
        :param cookie_attributes: The cookie_attributes of this CheckCookieResults.  # noqa: E501
        :type cookie_attributes: object
        :param fabric_attributes: The fabric_attributes of this CheckCookieResults.  # noqa: E501
        :type fabric_attributes: object
        """
        self.swagger_types = {
            'cookie_name': str,
            'cookie_attributes': object,
            'fabric_attributes': object
        }

        self.attribute_map = {
            'cookie_name': 'cookie_name',
            'cookie_attributes': 'cookie_attributes',
            'fabric_attributes': 'fabric_attributes'
        }
        self._cookie_name = cookie_name
        self._cookie_attributes = cookie_attributes
        self._fabric_attributes = fabric_attributes

    @classmethod
    def from_dict(cls, dikt) -> 'CheckCookieResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The check_cookie_results of this CheckCookieResults.  # noqa: E501
        :rtype: CheckCookieResults
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cookie_name(self) -> str:
        """Gets the cookie_name of this CheckCookieResults.


        :return: The cookie_name of this CheckCookieResults.
        :rtype: str
        """
        return self._cookie_name

    @cookie_name.setter
    def cookie_name(self, cookie_name: str):
        """Sets the cookie_name of this CheckCookieResults.


        :param cookie_name: The cookie_name of this CheckCookieResults.
        :type cookie_name: str
        """

        self._cookie_name = cookie_name

    @property
    def cookie_attributes(self) -> object:
        """Gets the cookie_attributes of this CheckCookieResults.


        :return: The cookie_attributes of this CheckCookieResults.
        :rtype: object
        """
        return self._cookie_attributes

    @cookie_attributes.setter
    def cookie_attributes(self, cookie_attributes: object):
        """Sets the cookie_attributes of this CheckCookieResults.


        :param cookie_attributes: The cookie_attributes of this CheckCookieResults.
        :type cookie_attributes: object
        """

        self._cookie_attributes = cookie_attributes

    @property
    def fabric_attributes(self) -> object:
        """Gets the fabric_attributes of this CheckCookieResults.


        :return: The fabric_attributes of this CheckCookieResults.
        :rtype: object
        """
        return self._fabric_attributes

    @fabric_attributes.setter
    def fabric_attributes(self, fabric_attributes: object):
        """Sets the fabric_attributes of this CheckCookieResults.


        :param fabric_attributes: The fabric_attributes of this CheckCookieResults.
        :type fabric_attributes: object
        """

        self._fabric_attributes = fabric_attributes
