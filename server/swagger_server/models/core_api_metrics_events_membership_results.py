# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CoreApiMetricsEventsMembershipResults(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, added_by: str=None, added_date: datetime=None, membership_type: str=None, people_uuid: str=None, project_uuid: str=None, removed_by: str=None, removed_date: datetime=None):  # noqa: E501
        """CoreApiMetricsEventsMembershipResults - a model defined in Swagger

        :param added_by: The added_by of this CoreApiMetricsEventsMembershipResults.  # noqa: E501
        :type added_by: str
        :param added_date: The added_date of this CoreApiMetricsEventsMembershipResults.  # noqa: E501
        :type added_date: datetime
        :param membership_type: The membership_type of this CoreApiMetricsEventsMembershipResults.  # noqa: E501
        :type membership_type: str
        :param people_uuid: The people_uuid of this CoreApiMetricsEventsMembershipResults.  # noqa: E501
        :type people_uuid: str
        :param project_uuid: The project_uuid of this CoreApiMetricsEventsMembershipResults.  # noqa: E501
        :type project_uuid: str
        :param removed_by: The removed_by of this CoreApiMetricsEventsMembershipResults.  # noqa: E501
        :type removed_by: str
        :param removed_date: The removed_date of this CoreApiMetricsEventsMembershipResults.  # noqa: E501
        :type removed_date: datetime
        """
        self.swagger_types = {
            'added_by': str,
            'added_date': datetime,
            'membership_type': str,
            'people_uuid': str,
            'project_uuid': str,
            'removed_by': str,
            'removed_date': datetime
        }

        self.attribute_map = {
            'added_by': 'added_by',
            'added_date': 'added_date',
            'membership_type': 'membership_type',
            'people_uuid': 'people_uuid',
            'project_uuid': 'project_uuid',
            'removed_by': 'removed_by',
            'removed_date': 'removed_date'
        }
        self._added_by = added_by
        self._added_date = added_date
        self._membership_type = membership_type
        self._people_uuid = people_uuid
        self._project_uuid = project_uuid
        self._removed_by = removed_by
        self._removed_date = removed_date

    @classmethod
    def from_dict(cls, dikt) -> 'CoreApiMetricsEventsMembershipResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The core_api_metrics_events_membership_results of this CoreApiMetricsEventsMembershipResults.  # noqa: E501
        :rtype: CoreApiMetricsEventsMembershipResults
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added_by(self) -> str:
        """Gets the added_by of this CoreApiMetricsEventsMembershipResults.


        :return: The added_by of this CoreApiMetricsEventsMembershipResults.
        :rtype: str
        """
        return self._added_by

    @added_by.setter
    def added_by(self, added_by: str):
        """Sets the added_by of this CoreApiMetricsEventsMembershipResults.


        :param added_by: The added_by of this CoreApiMetricsEventsMembershipResults.
        :type added_by: str
        """

        self._added_by = added_by

    @property
    def added_date(self) -> datetime:
        """Gets the added_date of this CoreApiMetricsEventsMembershipResults.


        :return: The added_date of this CoreApiMetricsEventsMembershipResults.
        :rtype: datetime
        """
        return self._added_date

    @added_date.setter
    def added_date(self, added_date: datetime):
        """Sets the added_date of this CoreApiMetricsEventsMembershipResults.


        :param added_date: The added_date of this CoreApiMetricsEventsMembershipResults.
        :type added_date: datetime
        """

        self._added_date = added_date

    @property
    def membership_type(self) -> str:
        """Gets the membership_type of this CoreApiMetricsEventsMembershipResults.


        :return: The membership_type of this CoreApiMetricsEventsMembershipResults.
        :rtype: str
        """
        return self._membership_type

    @membership_type.setter
    def membership_type(self, membership_type: str):
        """Sets the membership_type of this CoreApiMetricsEventsMembershipResults.


        :param membership_type: The membership_type of this CoreApiMetricsEventsMembershipResults.
        :type membership_type: str
        """

        self._membership_type = membership_type

    @property
    def people_uuid(self) -> str:
        """Gets the people_uuid of this CoreApiMetricsEventsMembershipResults.


        :return: The people_uuid of this CoreApiMetricsEventsMembershipResults.
        :rtype: str
        """
        return self._people_uuid

    @people_uuid.setter
    def people_uuid(self, people_uuid: str):
        """Sets the people_uuid of this CoreApiMetricsEventsMembershipResults.


        :param people_uuid: The people_uuid of this CoreApiMetricsEventsMembershipResults.
        :type people_uuid: str
        """

        self._people_uuid = people_uuid

    @property
    def project_uuid(self) -> str:
        """Gets the project_uuid of this CoreApiMetricsEventsMembershipResults.


        :return: The project_uuid of this CoreApiMetricsEventsMembershipResults.
        :rtype: str
        """
        return self._project_uuid

    @project_uuid.setter
    def project_uuid(self, project_uuid: str):
        """Sets the project_uuid of this CoreApiMetricsEventsMembershipResults.


        :param project_uuid: The project_uuid of this CoreApiMetricsEventsMembershipResults.
        :type project_uuid: str
        """

        self._project_uuid = project_uuid

    @property
    def removed_by(self) -> str:
        """Gets the removed_by of this CoreApiMetricsEventsMembershipResults.


        :return: The removed_by of this CoreApiMetricsEventsMembershipResults.
        :rtype: str
        """
        return self._removed_by

    @removed_by.setter
    def removed_by(self, removed_by: str):
        """Sets the removed_by of this CoreApiMetricsEventsMembershipResults.


        :param removed_by: The removed_by of this CoreApiMetricsEventsMembershipResults.
        :type removed_by: str
        """

        self._removed_by = removed_by

    @property
    def removed_date(self) -> datetime:
        """Gets the removed_date of this CoreApiMetricsEventsMembershipResults.


        :return: The removed_date of this CoreApiMetricsEventsMembershipResults.
        :rtype: datetime
        """
        return self._removed_date

    @removed_date.setter
    def removed_date(self, removed_date: datetime):
        """Sets the removed_date of this CoreApiMetricsEventsMembershipResults.


        :param removed_date: The removed_date of this CoreApiMetricsEventsMembershipResults.
        :type removed_date: datetime
        """

        self._removed_date = removed_date
