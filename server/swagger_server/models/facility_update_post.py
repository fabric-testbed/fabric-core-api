# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class FacilityUpdatePost(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, button: str=None, content: str=None, _date: date=None, end_date: datetime=None, id: int=None, link: str=None, start_date: datetime=None, title: str=None):  # noqa: E501
        """FacilityUpdatePost - a model defined in Swagger

        :param button: The button of this FacilityUpdatePost.  # noqa: E501
        :type button: str
        :param content: The content of this FacilityUpdatePost.  # noqa: E501
        :type content: str
        :param _date: The _date of this FacilityUpdatePost.  # noqa: E501
        :type _date: date
        :param end_date: The end_date of this FacilityUpdatePost.  # noqa: E501
        :type end_date: datetime
        :param id: The id of this FacilityUpdatePost.  # noqa: E501
        :type id: int
        :param link: The link of this FacilityUpdatePost.  # noqa: E501
        :type link: str
        :param start_date: The start_date of this FacilityUpdatePost.  # noqa: E501
        :type start_date: datetime
        :param title: The title of this FacilityUpdatePost.  # noqa: E501
        :type title: str
        """
        self.swagger_types = {
            'button': str,
            'content': str,
            '_date': date,
            'end_date': datetime,
            'id': int,
            'link': str,
            'start_date': datetime,
            'title': str
        }

        self.attribute_map = {
            'button': 'button',
            'content': 'content',
            '_date': 'date',
            'end_date': 'end_date',
            'id': 'id',
            'link': 'link',
            'start_date': 'start_date',
            'title': 'title'
        }
        self._button = button
        self._content = content
        self.__date = _date
        self._end_date = end_date
        self._id = id
        self._link = link
        self._start_date = start_date
        self._title = title

    @classmethod
    def from_dict(cls, dikt) -> 'FacilityUpdatePost':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The facility_update_post of this FacilityUpdatePost.  # noqa: E501
        :rtype: FacilityUpdatePost
        """
        return util.deserialize_model(dikt, cls)

    @property
    def button(self) -> str:
        """Gets the button of this FacilityUpdatePost.


        :return: The button of this FacilityUpdatePost.
        :rtype: str
        """
        return self._button

    @button.setter
    def button(self, button: str):
        """Sets the button of this FacilityUpdatePost.


        :param button: The button of this FacilityUpdatePost.
        :type button: str
        """

        self._button = button

    @property
    def content(self) -> str:
        """Gets the content of this FacilityUpdatePost.


        :return: The content of this FacilityUpdatePost.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this FacilityUpdatePost.


        :param content: The content of this FacilityUpdatePost.
        :type content: str
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")  # noqa: E501

        self._content = content

    @property
    def _date(self) -> date:
        """Gets the _date of this FacilityUpdatePost.


        :return: The _date of this FacilityUpdatePost.
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date: date):
        """Sets the _date of this FacilityUpdatePost.


        :param _date: The _date of this FacilityUpdatePost.
        :type _date: date
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")  # noqa: E501

        self.__date = _date

    @property
    def end_date(self) -> datetime:
        """Gets the end_date of this FacilityUpdatePost.


        :return: The end_date of this FacilityUpdatePost.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date: datetime):
        """Sets the end_date of this FacilityUpdatePost.


        :param end_date: The end_date of this FacilityUpdatePost.
        :type end_date: datetime
        """
        if end_date is None:
            raise ValueError("Invalid value for `end_date`, must not be `None`")  # noqa: E501

        self._end_date = end_date

    @property
    def id(self) -> int:
        """Gets the id of this FacilityUpdatePost.


        :return: The id of this FacilityUpdatePost.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this FacilityUpdatePost.


        :param id: The id of this FacilityUpdatePost.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def link(self) -> str:
        """Gets the link of this FacilityUpdatePost.


        :return: The link of this FacilityUpdatePost.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link: str):
        """Sets the link of this FacilityUpdatePost.


        :param link: The link of this FacilityUpdatePost.
        :type link: str
        """

        self._link = link

    @property
    def start_date(self) -> datetime:
        """Gets the start_date of this FacilityUpdatePost.


        :return: The start_date of this FacilityUpdatePost.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date: datetime):
        """Sets the start_date of this FacilityUpdatePost.


        :param start_date: The start_date of this FacilityUpdatePost.
        :type start_date: datetime
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")  # noqa: E501

        self._start_date = start_date

    @property
    def title(self) -> str:
        """Gets the title of this FacilityUpdatePost.


        :return: The title of this FacilityUpdatePost.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this FacilityUpdatePost.


        :param title: The title of this FacilityUpdatePost.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")  # noqa: E501

        self._title = title
