# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ProfilePeopleOtherIdentities(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, identity: str=None, type: str=None):  # noqa: E501
        """ProfilePeopleOtherIdentities - a model defined in Swagger

        :param identity: The identity of this ProfilePeopleOtherIdentities.  # noqa: E501
        :type identity: str
        :param type: The type of this ProfilePeopleOtherIdentities.  # noqa: E501
        :type type: str
        """
        self.swagger_types = {
            'identity': str,
            'type': str
        }

        self.attribute_map = {
            'identity': 'identity',
            'type': 'type'
        }
        self._identity = identity
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'ProfilePeopleOtherIdentities':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The profile_people_other_identities of this ProfilePeopleOtherIdentities.  # noqa: E501
        :rtype: ProfilePeopleOtherIdentities
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity(self) -> str:
        """Gets the identity of this ProfilePeopleOtherIdentities.


        :return: The identity of this ProfilePeopleOtherIdentities.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity: str):
        """Sets the identity of this ProfilePeopleOtherIdentities.


        :param identity: The identity of this ProfilePeopleOtherIdentities.
        :type identity: str
        """

        self._identity = identity

    @property
    def type(self) -> str:
        """Gets the type of this ProfilePeopleOtherIdentities.


        :return: The type of this ProfilePeopleOtherIdentities.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this ProfilePeopleOtherIdentities.


        :param type: The type of this ProfilePeopleOtherIdentities.
        :type type: str
        """

        self._type = type
