# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.status400_bad_request_errors import Status400BadRequestErrors  # noqa: F401,E501
from swagger_server import util


class Status400BadRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, errors: List[Status400BadRequestErrors]=None, type: str='error', size: int=1, status: int=400):  # noqa: E501
        """Status400BadRequest - a model defined in Swagger

        :param errors: The errors of this Status400BadRequest.  # noqa: E501
        :type errors: List[Status400BadRequestErrors]
        :param type: The type of this Status400BadRequest.  # noqa: E501
        :type type: str
        :param size: The size of this Status400BadRequest.  # noqa: E501
        :type size: int
        :param status: The status of this Status400BadRequest.  # noqa: E501
        :type status: int
        """
        self.swagger_types = {
            'errors': List[Status400BadRequestErrors],
            'type': str,
            'size': int,
            'status': int
        }

        self.attribute_map = {
            'errors': 'errors',
            'type': 'type',
            'size': 'size',
            'status': 'status'
        }
        self._errors = errors
        self._type = type
        self._size = size
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'Status400BadRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The status_400_bad_request of this Status400BadRequest.  # noqa: E501
        :rtype: Status400BadRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self) -> List[Status400BadRequestErrors]:
        """Gets the errors of this Status400BadRequest.


        :return: The errors of this Status400BadRequest.
        :rtype: List[Status400BadRequestErrors]
        """
        return self._errors

    @errors.setter
    def errors(self, errors: List[Status400BadRequestErrors]):
        """Sets the errors of this Status400BadRequest.


        :param errors: The errors of this Status400BadRequest.
        :type errors: List[Status400BadRequestErrors]
        """

        self._errors = errors

    @property
    def type(self) -> str:
        """Gets the type of this Status400BadRequest.


        :return: The type of this Status400BadRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Status400BadRequest.


        :param type: The type of this Status400BadRequest.
        :type type: str
        """

        self._type = type

    @property
    def size(self) -> int:
        """Gets the size of this Status400BadRequest.


        :return: The size of this Status400BadRequest.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size: int):
        """Sets the size of this Status400BadRequest.


        :param size: The size of this Status400BadRequest.
        :type size: int
        """

        self._size = size

    @property
    def status(self) -> int:
        """Gets the status of this Status400BadRequest.


        :return: The status of this Status400BadRequest.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status: int):
        """Sets the status of this Status400BadRequest.


        :param status: The status of this Status400BadRequest.
        :type status: int
        """

        self._status = status
