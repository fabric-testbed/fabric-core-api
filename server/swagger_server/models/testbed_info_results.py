# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TestbedInfoResults(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, testbed_info: object=None, uuid: str=None):  # noqa: E501
        """TestbedInfoResults - a model defined in Swagger

        :param testbed_info: The testbed_info of this TestbedInfoResults.  # noqa: E501
        :type testbed_info: object
        :param uuid: The uuid of this TestbedInfoResults.  # noqa: E501
        :type uuid: str
        """
        self.swagger_types = {
            'testbed_info': object,
            'uuid': str
        }

        self.attribute_map = {
            'testbed_info': 'testbed_info',
            'uuid': 'uuid'
        }
        self._testbed_info = testbed_info
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt) -> 'TestbedInfoResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The testbed_info_results of this TestbedInfoResults.  # noqa: E501
        :rtype: TestbedInfoResults
        """
        return util.deserialize_model(dikt, cls)

    @property
    def testbed_info(self) -> object:
        """Gets the testbed_info of this TestbedInfoResults.


        :return: The testbed_info of this TestbedInfoResults.
        :rtype: object
        """
        return self._testbed_info

    @testbed_info.setter
    def testbed_info(self, testbed_info: object):
        """Sets the testbed_info of this TestbedInfoResults.


        :param testbed_info: The testbed_info of this TestbedInfoResults.
        :type testbed_info: object
        """

        self._testbed_info = testbed_info

    @property
    def uuid(self) -> str:
        """Gets the uuid of this TestbedInfoResults.


        :return: The uuid of this TestbedInfoResults.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this TestbedInfoResults.


        :param uuid: The uuid of this TestbedInfoResults.
        :type uuid: str
        """

        self._uuid = uuid
